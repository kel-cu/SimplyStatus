plugins {
    id "io.github.goooler.shadow" version "8.1.7" apply false
    id "architectury-plugin" version "3.+"
    id "dev.architectury.loom" version "1.6+" apply false
    id "io.github.p03w.machete" version "2.+" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "io.github.p03w.machete"
    loom {
        silentMojangMappingsLicense()
    }
    configurations {shadowCommon}
    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${rootProject.mc_parchment_version}:${rootProject.parchment_version}@zip")
        }
        // Discord Integration
        shadowCommon(implementation("com.kohlschutter.junixsocket:junixsocket-common:2.7.0"))
        shadowCommon(implementation("com.kohlschutter.junixsocket:junixsocket-native-common:2.7.0"))
        shadowCommon(implementation("com.jagrosh.discordipc:DiscordIPC:0.8.11"))
        // Mods libs
        modApi "maven.modrinth:replaymod:${project.replaymod}"
        modApi "maven.modrinth:plasmo-voice:${project.plasmovoice}"
        modApi "maven.modrinth:simple-voice-chat:${project.svc}"
        modApi "ru.kelcuprum.waterplayer:WaterPlayer:${project.waterplayer}"
        implementation("meteordevelopment:starscript:0.3.4")
    }

    machete {
        ignoredTasks.add("shadowJar")
        ignoredTasks.add("jar")
    }

}


allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        mavenCentral()
        maven { url = "https://maven.terraformersmc.com/releases" }
        maven { url = "https://maven.neoforged.net/releases/" } // NEOFORGE
        maven { url = "https://maven.meteordev.org/releases" }
        maven { url = 'https://repo.kelcuprum.ru/snapshots' }
        maven { url = 'https://repo.kelcuprum.ru/releases' }
        maven { url = 'https://repo.kelcuprum.ru/forks' }
        maven { url = 'https://repo.kelcuprum.ru/test' }
        maven { url = "https://api.modrinth.com/maven" }
        maven { url = "https://maven.parchmentmc.org" } // MAPPINGS
        maven { url = "https://jitpack.io/" }
    }

    def targetJavaVersion = 17

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = "UTF-8"
        if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
            it.options.release = targetJavaVersion
        }
    }

    java {
        withSourcesJar()
    }
}